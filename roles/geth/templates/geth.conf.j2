upstream http_backend {
{% if (ingress.lb_method | default("")) %}
  {{ lb_method }};
{% endif %}
{% for upstream in geth_nodes %}
  server {{ upstream }}:8545;
{% endfor %}
}

server {
    listen		80;
    listen [::]:80;
    server_name {{ ingress.domain_name }};

    {% if ingress.ssl and (ingress.ssl.enabled|default(false)) %}
    return 301 https://$server_name$request_uri;
    {% else %}
    location / {
        proxy_pass http://http_backend;

        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
    {% endif %}
}

{% if ingress.ssl and (ingress.ssl.enabled|default(false)) %}
server {
    listen		443 ssl;
    listen [::]:443 ssl;
    server_name {{ geth_domain.name }};

    ssl_certificate /etc/ssl/certs/{{ ingress.domain_name }}.crt;
    ssl_certificate_key /etc/ssl/private/{{ ingress.domain_name }}.key;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # Enable HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    location / {
        proxy_pass http://http_backend;

        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
}
{% endif %}
